# Generated by Django 3.2.6 on 2021-08-07 06:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BoardCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'board_categories',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('views', models.IntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(default='192.168.0.1')),
                ('password', models.CharField(max_length=200)),
                ('group_id', models.BigIntegerField()),
                ('group_order', models.IntegerField(default=0)),
                ('group_depth', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('board_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='boards.boardcategory')),
            ],
            options={
                'db_table': 'posts',
            },
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'post_categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.post')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.tag')),
            ],
            options={
                'db_table': 'post_tags',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='post_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='boards.postcategory'),
        ),
        migrations.AddField(
            model_name='post',
            name='tag',
            field=models.ManyToManyField(through='boards.PostTag', to='boards.Tag'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user'),
        ),
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('path', models.FileField(null=True, upload_to='media/')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boards.post')),
            ],
            options={
                'db_table': 'file_uploads',
            },
        ),
    ]
